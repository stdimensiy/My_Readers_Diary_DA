package ru.vdv.myapp.myreadersdiary.glide

/**
 * Универсальный интерфейс, на случай оперативной замены библиотеки работающей с изображениями
 */

interface ImageLoader<T> {
    /**
    ## Загрузить изображения обложки книги
     * @param url строка содержащая URL картинки (ОБЛОЖКИ КНИГИ)
     * @param container объект (view) куда будет загружено изображение
     * @return [Unit] нет возвращаемого параметра (действие будет выполнено в любом случае)
     * @throws [Unit] не возвращает ошибку, в случае некорректности данных метод применит и
     * подставит во View картинку обложки "по умолчанию" (*выбор котрой осуществляется на основании
     * отдельного алгоритма*)
     **/
    fun loadBookCover(url: String, container: T)

    /**
    ## Загрузить изображения аватара пользователя
     * @param url строка содержащая URL картинки (АВАТАРА ПОЛЬЗОВАТЕЛЯ)
     * @param container объект (view) куда будет загружено изображение
     * @return [Unit] нет возвращаемого параметра (действие будет выполнено в любом случае)
     * @throws [Unit] не возвращает ошибку, в случае некорректности данных метод применит
     * дефолтные значения в данном конкретном случае во View будет подставлена картинка
     * дефолтного аватара (*выбор которого осуществляется на основании внутреннего алгоритма*)
     **/
    fun loadUserAvatar(url: String, container: T)

    /**
    ## Загрузить изображения пользовательского фона
     * @param url строка содержащая URL картинки (ФОН ПОЛЬЗОВАТЕЛЯ)
     * @param container объект (view) куда будет загружено изображение
     * @return [Unit] нет возвращаемого параметра (действие будет выполнено в любом случае)
     * @throws [Unit] не возвращает ошибку, в случае некорректности данных метод применит
     * дефолтные значения в данном конкретном случае во View будет подставлена картинка
     * фона "по умолчанию" (*выбор которой осуществляется на основании внутреннего алгоритма*)
     **/
    fun loadUserBackground(url: String, container: T)
}